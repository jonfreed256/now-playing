{"ast":null,"code":"import _classCallCheck from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Components/SelectedMovie.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Header, Container } from 'semantic-ui-react';\n\nvar SelectedMovie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SelectedMovie, _Component);\n\n  function SelectedMovie() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SelectedMovie);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SelectedMovie)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getMovieShowtimes = function () {\n      var movieShowtimes = {};\n\n      _this.props.selectedMovie.showtimes.forEach(function (theatre) {\n        if (movieShowtimes.hasOwnProperty([theatre.theatre.name])) {\n          movieShowtimes[theatre.theatre.name].push(theatre.dateTime);\n        } else {\n          movieShowtimes[theatre.theatre.name] = [theatre.dateTime];\n        }\n      });\n\n      return movieShowtimes;\n    };\n\n    return _this;\n  }\n\n  _createClass(SelectedMovie, [{\n    key: \"render\",\n    value: function render() {\n      // console.log(this.getMovieShowtimes());\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.selectedMovie.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.selectedMovie.genres.map(function (genre) {\n        return genre;\n      })), React.createElement(Header, {\n        as: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Directed by \", this.props.selectedMovie.directors.map(function (director) {\n        return director;\n      })), React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Staring: \", this.props.selectedMovie.topCast.map(function (cast) {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"cast\");\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.selectedMovie.longDescription)));\n    }\n  }]);\n\n  return SelectedMovie;\n}(Component);\n\n;\n\nvar mapState = function mapState(state) {\n  return {\n    selectedMovie: state.selectedMovie\n  };\n};\n\nexport default withRouter(connect(mapState)(SelectedMovie));","map":{"version":3,"sources":["/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Components/SelectedMovie.js"],"names":["React","Component","connect","withRouter","Header","Container","SelectedMovie","getMovieShowtimes","movieShowtimes","props","selectedMovie","showtimes","forEach","theatre","hasOwnProperty","name","push","dateTime","title","genres","map","genre","directors","director","topCast","cast","longDescription","mapState","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC;;IAEMC,a;;;;;;;;;;;;;;;;;;UAQJC,iB,GAAoB,YAAM;AAExB,UAAIC,cAAc,GAAG,EAArB;;AAEA,YAAKC,KAAL,CAAWC,aAAX,CAAyBC,SAAzB,CAAmCC,OAAnC,CAA2C,UAAAC,OAAO,EAAI;AACpD,YAAGL,cAAc,CAACM,cAAf,CAA8B,CAACD,OAAO,CAACA,OAAR,CAAgBE,IAAjB,CAA9B,CAAH,EAAyD;AACzDP,UAAAA,cAAc,CAACK,OAAO,CAACA,OAAR,CAAgBE,IAAjB,CAAd,CAAqCC,IAArC,CAA0CH,OAAO,CAACI,QAAlD;AACC,SAFD,MAEO;AACLT,UAAAA,cAAc,CAACK,OAAO,CAACA,OAAR,CAAgBE,IAAjB,CAAd,GAAuC,CAACF,OAAO,CAACI,QAAT,CAAvC;AACD;AACF,OAND;;AAOA,aAAOT,cAAP;AACD,K;;;;;;;6BAEO;AACN;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB,KAAKC,KAAL,CAAWC,aAAX,CAAyBQ,KAA1C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKT,KAAL,CAAWC,aAAX,CAAyBS,MAAzB,CAAgCC,GAAhC,CAAoC,UAAAC,KAAK;AAAA,eAAIA,KAAJ;AAAA,OAAzC,CAAJ,CAFF,EAGE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA6B,KAAKZ,KAAL,CAAWC,aAAX,CAAyBY,SAAzB,CAAmCF,GAAnC,CAAuC,UAAAG,QAAQ;AAAA,eAAIA,QAAJ;AAAA,OAA/C,CAA7B,CAHF,EAIE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0B,KAAKd,KAAL,CAAWC,aAAX,CAAyBc,OAAzB,CAAiCJ,GAAjC,CAAqC,UAAAK,IAAI;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ;AAAA,OAAzC,CAA1B,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKhB,KAAL,CAAWC,aAAX,CAAyBgB,eAA7B,CALF,CADF,CADJ;AAYA;;;;EApCwBzB,S;;AAqC3B;;AAED,IAAM0B,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,SAAO;AACLlB,IAAAA,aAAa,EAAEkB,KAAK,CAAClB;AADhB,GAAP;AAGD,CAJD;;AAMA,eAAeP,UAAU,CAACD,OAAO,CAACyB,QAAD,CAAP,CAAkBrB,aAAlB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Header, Container } from 'semantic-ui-react';\n\nclass SelectedMovie extends Component {\n\n  // componentDidMount() {\n  //   if((this.props.selectedMovies) === undefined){\n  //     this.props.history.push('/zips')\n  //   }\n  // }\n\n  getMovieShowtimes = () => {\n\n    let movieShowtimes = {};\n\n    this.props.selectedMovie.showtimes.forEach(theatre => {\n      if(movieShowtimes.hasOwnProperty([theatre.theatre.name])){\n      movieShowtimes[theatre.theatre.name].push(theatre.dateTime)\n      } else {\n        movieShowtimes[theatre.theatre.name] = [theatre.dateTime]\n      }\n    });\n    return movieShowtimes\n  };\n\n  render(){\n    // console.log(this.getMovieShowtimes());\n    return(\n        <div>\n          <Container>\n            <Header as='h1'>{this.props.selectedMovie.title}</Header>\n            <p>{this.props.selectedMovie.genres.map(genre => genre)}</p>\n            <Header as='h3'>Directed by {this.props.selectedMovie.directors.map(director => director)}</Header>\n            <Header as='h2'>Staring: {this.props.selectedMovie.topCast.map(cast => <ul>cast</ul>)}</Header>\n            <p>{this.props.selectedMovie.longDescription}</p>\n            {/*<p>this.props.selectedMovie.showtimes.map(director => director)</p>*/}\n          </Container>\n        </div>\n    )\n   }\n};\n\nconst mapState = (state) => {\n  return {\n    selectedMovie: state.selectedMovie\n  }\n};\n\nexport default withRouter(connect(mapState)(SelectedMovie));"]},"metadata":{},"sourceType":"module"}