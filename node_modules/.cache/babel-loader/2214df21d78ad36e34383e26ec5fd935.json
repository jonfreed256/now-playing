{"ast":null,"code":"var commentsUrl = 'http://localhost:3001/api/v1/comments';\nexport var persistComment = function persistComment(commentData) {\n  console.log(commentData);\n  return function (dispatch) {\n    return fetch(commentsUrl, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: \"Bearer \".concat(localStorage.token)\n      },\n      body: JSON.stringify({\n        commentData: commentData\n      })\n    });\n  };\n};\nexport var getComments = function getComments(comments) {\n  return {\n    type: 'GET_COMMENTS',\n    payload: comments\n  };\n};\nexport var getAllComments = function getAllComments() {\n  return function (dispatch) {\n    return fetch(commentsUrl, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: \"Bearer \".concat(localStorage.token)\n      }\n    }).then(function (r) {\n      return r.json();\n    }).then(function (comments) {\n      return dispatch(getComments(comments));\n    }).catch(console.error);\n  };\n};","map":{"version":3,"sources":["/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Redux/Actions/commentAction.js"],"names":["commentsUrl","persistComment","commentData","console","log","dispatch","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","getComments","comments","type","payload","getAllComments","then","r","json","catch","error"],"mappings":"AAAA,IAAMA,WAAW,GAAG,uCAApB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,WAAD,EAAiB;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,SAAO,UAAAG,QAAQ,EAAI;AACjB,WAAOC,KAAK,CAACN,WAAD,EAAc;AACxBO,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,mBAAW,kBAFJ;AAGPC,QAAAA,aAAa,mBAAYC,YAAY,CAACC,KAAzB;AAHN,OAFe;AAOxBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACZ,QAAAA,WAAW,EAAXA;AAAD,OAAf;AAPkB,KAAd,CAAZ;AASD,GAVD;AAWD,CAbM;AAeP,OAAO,IAAMa,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAe;AAACC,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,OAAO,EAAEF;AAAhC,GAAf;AAAA,CAApB;AAEP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAO,UAAAd,QAAQ,EAAI;AACjB,WAAOC,KAAK,CAACN,WAAD,EAAc;AACxBO,MAAAA,MAAM,EAAE,KADgB;AAExBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,mBAAW,kBAFJ;AAGPC,QAAAA,aAAa,mBAAYC,YAAY,CAACC,KAAzB;AAHN;AAFe,KAAd,CAAL,CAQNS,IARM,CAQD,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,KARA,EASNF,IATM,CASD,UAAAJ,QAAQ;AAAA,aAAIX,QAAQ,CAACU,WAAW,CAACC,QAAD,CAAZ,CAAZ;AAAA,KATP,EAUNO,KAVM,CAUApB,OAAO,CAACqB,KAVR,CAAP;AAWD,GAZD;AAaD,CAdM","sourcesContent":["const commentsUrl = 'http://localhost:3001/api/v1/comments'\n\nexport const persistComment = (commentData) => {\n  console.log(commentData)\n  return dispatch => {\n    return fetch(commentsUrl, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({commentData})\n    })\n  }\n};\n\nexport const getComments = (comments) => ({type: 'GET_COMMENTS', payload: comments});\n\nexport const getAllComments = () => {\n  return dispatch => {\n    return fetch(commentsUrl, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    })\n    .then(r => r.json())\n    .then(comments => dispatch(getComments(comments)))\n    .catch(console.error)\n  }\n}"]},"metadata":{},"sourceType":"module"}