{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Components/Comments.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Comment, Form } from 'semantic-ui-react';\n\nvar Comments = function Comments(props) {\n  return React.createElement(Comment.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Comment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Comment.Avatar, {\n    as: \"a\",\n    src: \"https://react.semantic-ui.com/images/avatar/small/joe.jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(Comment.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Comment.Author, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.user.username), React.createElement(Comment.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Preserve until your next run, when the watch lets you see how Impermanent your efforts are.\")))), React.createElement(Form, {\n    reply: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Form.TextArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Button, {\n    content: \"Add Comment\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    color: \"purple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nvar mapState = function mapState(state) {\n  return {\n    user: state.userData.user\n  };\n};\n\nexport default connect(mapState)(Comments);","map":{"version":3,"sources":["/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Components/Comments.js"],"names":["React","connect","Button","Comment","Form","Comments","props","user","username","mapState","state","userData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,mBAAtC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,SACE,oBAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,EAAE,EAAC,GAAnB;AAAuB,IAAA,GAAG,EAAC,2DAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,KAAK,CAACC,IAAN,CAAWC,QAA5B,CADF,EAEI,oBAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGADF,CAFJ,CAFA,CADF,EAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,aAAhB;AAA8B,IAAA,aAAa,EAAC,MAA5C;AAAmD,IAAA,IAAI,EAAC,MAAxD;AAA+D,IAAA,KAAK,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,CADF;AAoBD,CArBD;;AAuBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,SAAO;AACLH,IAAAA,IAAI,EAAEG,KAAK,CAACC,QAAN,CAAeJ;AADhB,GAAP;AAGD,CAJD;;AAMA,eAAeN,OAAO,CAACQ,QAAD,CAAP,CAAkBJ,QAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { Button, Comment, Form } from 'semantic-ui-react';\n\nconst Comments = (props) => {\n  return(\n    <Comment.Group>\n      <Comment>\n      <Comment.Avatar as='a' src='https://react.semantic-ui.com/images/avatar/small/joe.jpg' />\n      <Comment.Content>\n        <Comment.Author>{props.user.username}</Comment.Author>\n          <Comment.Text>\n            <p>\n            Preserve until your next run, when the watch lets you see how Impermanent your efforts\n            are.\n            </p>\n          </Comment.Text>\n      </Comment.Content>\n      </Comment>\n      <Form reply>\n        <Form.TextArea />\n        <Button content='Add Comment' labelPosition='left' icon='edit' color='purple' />\n      </Form>\n    </Comment.Group>\n  )\n};\n\nconst mapState = (state) => {\n  return {\n    user: state.userData.user\n  }\n};\n\nexport default connect(mapState)(Comments);"]},"metadata":{},"sourceType":"module"}