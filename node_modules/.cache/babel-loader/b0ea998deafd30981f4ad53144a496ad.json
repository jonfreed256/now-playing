{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Components/MovieCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Grid, Image } from 'semantic-ui-react';\nimport { selectMovie } from '../Redux/Actions/action';\n\nvar MovieCard = function MovieCard(props) {\n  var movie = props.movie;\n  return React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Card.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Card, {\n    onClick: function onClick() {\n      return selectMovie(movie);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: movie.preferredImage.uri,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    header: movie.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    description: movie.shortDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }))));\n};\n\nvar mapState = function mapState(state, ownProps) {\n  return {\n    loadedMovies: state.loadedMovies,\n    selected: state.selectedMovie.tmsId === ownProps.movie.tmsId\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    selectedMovie: function selectedMovie(movie) {\n      return dispatch(selectMovie(movie));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(MovieCard);","map":{"version":3,"sources":["/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Components/MovieCard.js"],"names":["React","connect","Card","Grid","Image","selectMovie","MovieCard","props","movie","preferredImage","uri","title","shortDescription","mapState","state","ownProps","loadedMovies","selected","selectedMovie","tmsId","mapDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;AACA,SAAQC,WAAR,QAA0B,yBAA1B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,MAEnBC,KAFmB,GAETD,KAFS,CAEnBC,KAFmB;AAGvB,SACM,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE;AAAA,aAAMH,WAAW,CAACG,KAAD,CAAjB;AAAA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC,cAAN,CAAqBC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,MAAM,EAAEF,KAAK,CAACG,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,EAGG,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,WAAW,EAAEH,KAAK,CAACI,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADF,CADF,CADN;AAYL,CAfD;;AAiBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACpC,SAAO;AACLC,IAAAA,YAAY,EAAEF,KAAK,CAACE,YADf;AAELC,IAAAA,QAAQ,EAAEH,KAAK,CAACI,aAAN,CAAoBC,KAApB,KAA8BJ,QAAQ,CAACP,KAAT,CAAeW;AAFlD,GAAP;AAID,CALD;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;AAAA,SAAK;AAC/BH,IAAAA,aAAa,EAAE,uBAACV,KAAD;AAAA,aAAWa,QAAQ,CAAChB,WAAW,CAACG,KAAD,CAAZ,CAAnB;AAAA;AADgB,GAAL;AAAA,CAA5B;;AAIA,eAAeP,OAAO,CAACY,QAAD,EAAWO,WAAX,CAAP,CAA+Bd,SAA/B,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Card, Grid, Image } from 'semantic-ui-react'\nimport {selectMovie} from '../Redux/Actions/action';\n\nconst MovieCard = (props) => {\n\n  const { movie } = props;\n      return(\n            <Grid.Column>\n              <Card.Group>\n                <Card onClick={() => selectMovie(movie)}>\n                  <Image src={movie.preferredImage.uri}/>\n                   <Card.Content header={movie.title} />\n                   <Card.Content description={movie.shortDescription} />\n               </Card>\n              </Card.Group>\n            </Grid.Column>\n\n  )\n};\n\nconst mapState = (state, ownProps) => {\n  return {\n    loadedMovies: state.loadedMovies,\n    selected: state.selectedMovie.tmsId === ownProps.movie.tmsId\n  }\n};\n\nconst mapDispatch = dispatch => ({\n  selectedMovie: (movie) => dispatch(selectMovie(movie))\n});\n\nexport default connect(mapState, mapDispatch)(MovieCard);"]},"metadata":{},"sourceType":"module"}