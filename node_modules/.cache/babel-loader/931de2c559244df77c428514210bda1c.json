{"ast":null,"code":"import { backendMovies } from './movieAction';\nvar commentsUrl = 'http://localhost:3001/api/v1/comments';\nexport var addComment = function addComment(commentData) {\n  return {\n    type: 'ADD_COMMENT',\n    payload: commentData\n  };\n};\nexport var persistComment = function persistComment(commentData) {\n  return fetch(commentsUrl, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'accepts': 'application/json',\n      Authorization: \"Bearer \".concat(localStorage.token)\n    },\n    body: JSON.stringify({\n      commentData: commentData\n    })\n  });\n};\nexport var getComments = function getComments(comments) {\n  return {\n    type: 'GET_COMMENTS',\n    payload: comments\n  };\n};\nexport var getAllComments = function getAllComments() {\n  return function (dispatch) {\n    return fetch(commentsUrl, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: \"Bearer \".concat(localStorage.token)\n      }\n    }).then(function (r) {\n      return r.json();\n    }).then(function (comments) {\n      return dispatch(getComments(comments));\n    }).catch(console.error);\n  };\n};","map":{"version":3,"sources":["/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Redux/Actions/commentAction.js"],"names":["backendMovies","commentsUrl","addComment","commentData","type","payload","persistComment","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","getComments","comments","getAllComments","dispatch","then","r","json","catch","console","error"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,eAA5B;AAEA,IAAMC,WAAW,GAAG,uCAApB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD;AAAA,SAAkB;AAACC,IAAAA,IAAI,EAAE,aAAP;AAAsBC,IAAAA,OAAO,EAAEF;AAA/B,GAAlB;AAAA,CAAnB;AAEP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACH,WAAD,EAAiB;AAC3C,SAAOI,KAAK,CAACN,WAAD,EAAc;AACxBO,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,iBAAW,kBAFJ;AAGPC,MAAAA,aAAa,mBAAYC,YAAY,CAACC,KAAzB;AAHN,KAFe;AAOxBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACZ,MAAAA,WAAW,EAAXA;AAAD,KAAf;AAPkB,GAAd,CAAZ;AASH,CAVM;AAYP,OAAO,IAAMa,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAe;AAACb,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,OAAO,EAAEY;AAAhC,GAAf;AAAA,CAApB;AAEP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAOZ,KAAK,CAACN,WAAD,EAAc;AACxBO,MAAAA,MAAM,EAAE,KADgB;AAExBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,mBAAW,kBAFJ;AAGPC,QAAAA,aAAa,mBAAYC,YAAY,CAACC,KAAzB;AAHN;AAFe,KAAd,CAAL,CAQHQ,IARG,CAQE,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,KARH,EASHF,IATG,CASE,UAAAH,QAAQ;AAAA,aAAIE,QAAQ,CAACH,WAAW,CAACC,QAAD,CAAZ,CAAZ;AAAA,KATV,EAUHM,KAVG,CAUGC,OAAO,CAACC,KAVX,CAAP;AAWD,GAZD;AAaD,CAdM","sourcesContent":["import {backendMovies} from './movieAction';\n\nconst commentsUrl = 'http://localhost:3001/api/v1/comments'\n\nexport const addComment = (commentData) => ({type: 'ADD_COMMENT', payload: commentData});\n\nexport const persistComment = (commentData) => {\n    return fetch(commentsUrl, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({commentData})\n    })\n};\n\nexport const getComments = (comments) => ({type: 'GET_COMMENTS', payload: comments});\n\nexport const getAllComments = () => {\n  return dispatch => {\n    return fetch(commentsUrl, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }).\n        then(r => r.json()).\n        then(comments => dispatch(getComments(comments))).\n        catch(console.error)\n  }\n}"]},"metadata":{},"sourceType":"module"}