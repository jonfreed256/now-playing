{"ast":null,"code":"import _classCallCheck from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Containers/MoviesContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport MovieCard from '../Components/MovieCard';\nimport { Card, Container } from 'semantic-ui-react';\n\nvar MoviesContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MoviesContainer, _Component);\n\n  function MoviesContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MoviesContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MoviesContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.moviePosters = function () {\n      var posterObj = {};\n\n      _this.props.nowPlaying.forEach(function (movie) {\n        posterObj[movie.title] = \"http://image.tmdb.org/t/p/w185/\".concat(movie.poster_path);\n      });\n\n      return posterObj;\n    };\n\n    _this.nowPlaying = _this.props.nowPlaying;\n\n    _this.getUnique = function (nowPlaying, comp) {\n      //store the comparison  values in array\n      var unique = arr.map(function (e) {\n        return e[comp];\n      }). // store the keys of the unique objects\n      map(function (e, i, final) {\n        return final.indexOf(e) === i && i;\n      }) // eliminate the dead keys & return unique objects\n      .filter(function (e) {\n        return arr[e];\n      }).map(function (e) {\n        return arr[e];\n      });\n      return unique;\n    };\n\n    return _this;\n  }\n\n  _createClass(MoviesContainer, [{\n    key: \"render\",\n    value: function render() {\n      var loadedMovies = this.props.loadedMovies;\n      var posters = this.moviePosters();\n      var moviesArray = loadedMovies.map(function (movie) {\n        return React.createElement(MovieCard, {\n          key: movie.tmsId,\n          movie: movie,\n          posters: posters[movie.title.replace(\"3D\", \"\").trim()],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      });\n      return React.createElement(Container, {\n        id: \"movie-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        itemsPerRow: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, moviesArray.filter(function (movie) {\n        return movie.title.unique;\n      })));\n    }\n  }]);\n\n  return MoviesContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    loadedMovies: state.movieData.loadedMovies,\n    nowPlaying: state.movieData.nowPlaying\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(MoviesContainer));","map":{"version":3,"sources":["/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Containers/MoviesContainer.js"],"names":["React","Component","connect","withRouter","MovieCard","Card","Container","MoviesContainer","moviePosters","posterObj","props","nowPlaying","forEach","movie","title","poster_path","getUnique","comp","unique","arr","map","e","i","final","indexOf","filter","loadedMovies","posters","moviesArray","tmsId","replace","trim","mapStateToProps","state","console","log","movieData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;;IAEMC,e;;;;;;;;;;;;;;;;;;UAEJC,Y,GAAe,YAAM;AACnB,UAAIC,SAAS,GAAG,EAAhB;;AACA,YAAKC,KAAL,CAAWC,UAAX,CAAsBC,OAAtB,CAA8B,UAAAC,KAAK,EAAI;AACrCJ,QAAAA,SAAS,CAACI,KAAK,CAACC,KAAP,CAAT,4CAA2DD,KAAK,CAACE,WAAjE;AACD,OAFD;;AAGA,aAAON,SAAP;AACD,K;;UAEDE,U,GAAa,MAAKD,KAAL,CAAWC,U;;UAExBK,S,GAAY,UAACL,UAAD,EAAYM,IAAZ,EAAqB;AAE/B;AACA,UAAMC,MAAM,GAAIC,GAAG,CAACC,GAAJ,CAAQ,UAAAC,CAAC;AAAA,eAAGA,CAAC,CAACJ,IAAD,CAAJ;AAAA,OAAT,GACZ;AACAG,MAAAA,GAFY,CAER,UAACC,CAAD,EAAGC,CAAH,EAAKC,KAAL;AAAA,eAAcA,KAAK,CAACC,OAAN,CAAcH,CAAd,MAAqBC,CAArB,IAA0BA,CAAxC;AAAA,OAFQ,EAGZ;AAHY,OAIXG,MAJW,CAIJ,UAACJ,CAAD;AAAA,eAAMF,GAAG,CAACE,CAAD,CAAT;AAAA,OAJI,EAIUD,GAJV,CAIc,UAAAC,CAAC;AAAA,eAAEF,GAAG,CAACE,CAAD,CAAL;AAAA,OAJf,CAAhB;AAMA,aAAOH,MAAP;AAED,K;;;;;;;6BAEQ;AAAA,UACDQ,YADC,GACgB,KAAKhB,KADrB,CACDgB,YADC;AAEP,UAAIC,OAAO,GAAG,KAAKnB,YAAL,EAAd;AACE,UAAIoB,WAAW,GAAGF,YAAY,CAACN,GAAb,CAAiB,UAAAP,KAAK,EAAI;AAC1C,eAAO,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,KAAK,CAACgB,KAAtB;AAA6B,UAAA,KAAK,EAAEhB,KAApC;AAA2C,UAAA,OAAO,EAAEc,OAAO,CAACd,KAAK,CAACC,KAAN,CAAYgB,OAAZ,CAAoB,IAApB,EAA0B,EAA1B,EAA8BC,IAA9B,EAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFiB,CAAlB;AAGA,aACI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,WAAW,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,WAAW,CAACH,MAAZ,CAAmB,UAAAZ,KAAK;AAAA,eAAIA,KAAK,CAACC,KAAN,CAAYI,MAAhB;AAAA,OAAxB,CADH,CADF,CADJ;AAOD;;;;EAtCyBjB,S;;AAyC5B,IAAM+B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACLP,IAAAA,YAAY,EAAEO,KAAK,CAACG,SAAN,CAAgBV,YADzB;AAELf,IAAAA,UAAU,EAAEsB,KAAK,CAACG,SAAN,CAAgBzB;AAFvB,GAAP;AAID,CAND;;AAQF,eAAeR,UAAU,CAACD,OAAO,CAAC8B,eAAD,CAAP,CAAyBzB,eAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport MovieCard from '../Components/MovieCard'\nimport { Card, Container } from 'semantic-ui-react';\n\nclass MoviesContainer extends Component {\n\n  moviePosters = () => {\n    let posterObj = {};\n    this.props.nowPlaying.forEach(movie => {\n      posterObj[movie.title] = `http://image.tmdb.org/t/p/w185/${movie.poster_path}`\n    });\n    return posterObj\n  };\n\n  nowPlaying = this.props.nowPlaying;\n\n  getUnique = (nowPlaying,comp) => {\n\n    //store the comparison  values in array\n    const unique =  arr.map(e=> e[comp]).\n        // store the keys of the unique objects\n        map((e,i,final) =>final.indexOf(e) === i && i)\n        // eliminate the dead keys & return unique objects\n        .filter((e)=> arr[e]).map(e=>arr[e]);\n\n    return unique\n\n  }\n\n  render() {\n    let { loadedMovies } = this.props;\n    let posters = this.moviePosters();\n      let moviesArray = loadedMovies.map(movie => {\n        return <MovieCard key={movie.tmsId} movie={movie} posters={posters[movie.title.replace(\"3D\", \"\").trim()]}/>;\n      });\n      return(\n          <Container id='movie-container'>\n            <Card.Group itemsPerRow={4}>\n              {moviesArray.filter(movie => movie.title.unique)}\n            </Card.Group>\n          </Container>\n      )\n    }\n  }\n\n  const mapStateToProps = (state) => {\n    console.log(state);\n    return {\n      loadedMovies: state.movieData.loadedMovies,\n      nowPlaying: state.movieData.nowPlaying\n    }\n  };\n\nexport default withRouter(connect(mapStateToProps)(MoviesContainer));"]},"metadata":{},"sourceType":"module"}