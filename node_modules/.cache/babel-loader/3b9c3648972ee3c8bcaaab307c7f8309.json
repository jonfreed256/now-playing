{"ast":null,"code":"import _objectSpread from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  user: {},\n  nowPlaying: [],\n  loadedMovies: [],\n  selectedMovie: {}\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_USER':\n      {\n        return _objectSpread({}, state, {\n          user: action.payload\n        });\n      }\n\n    case 'ADD_PLAYING':\n      {\n        return _objectSpread({}, state, {\n          nowPlaying: action.payload\n        });\n      }\n\n    case 'GET_MOVIES':\n      {\n        return _objectSpread({}, state, {\n          loadedMovies: action.payload\n        });\n      }\n\n    case 'SELECT_MOVIE':\n      {\n        return _objectSpread({}, state, {\n          selectedMovie: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Redux/reducers/reducer.js"],"names":["initialState","user","nowPlaying","loadedMovies","selectedMovie","reducer","state","action","type","payload"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,UAAU,EAAE,EAFO;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,aAAa,EAAE;AAJI,CAArB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAgB;AACd,iCAAWF,KAAX;AAAkBL,UAAAA,IAAI,EAAEM,MAAM,CAACE;AAA/B;AACD;;AACD,SAAK,aAAL;AAAmB;AACjB,iCAAWH,KAAX;AAAkBJ,UAAAA,UAAU,EAAEK,MAAM,CAACE;AAArC;AACD;;AACD,SAAK,YAAL;AAAkB;AAChB,iCAAWH,KAAX;AAAkBH,UAAAA,YAAY,EAAEI,MAAM,CAACE;AAAvC;AACD;;AACD,SAAK,cAAL;AAAoB;AAClB,iCAAWH,KAAX;AAAkBF,UAAAA,aAAa,EAAEG,MAAM,CAACE;AAAxC;AACD;;AACD;AACE,aAAOH,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  user: {},\n  nowPlaying: [],\n  loadedMovies: [],\n  selectedMovie: {}\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_USER':{\n      return {...state, user: action.payload}\n    }\n    case 'ADD_PLAYING':{\n      return {...state, nowPlaying: action.payload}\n    }\n    case 'GET_MOVIES':{\n      return {...state, loadedMovies: action.payload}\n    }\n    case 'SELECT_MOVIE':{\n      return {...state, selectedMovie: action.payload}\n    }\n    default:\n      return state\n  }\n};\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}