{"ast":null,"code":"var moviesUrl = 'http://localhost:3001/api/v1/movies';\nexport var backendMovies = function backendMovies(movies) {\n  return {\n    type: 'BACKEND_MOVIES',\n    payload: movies\n  };\n};\nexport var getBackendMovies = function getBackendMovies() {\n  return function (dispatch) {\n    return fetch(moviesUrl, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: \"Bearer \".concat(localStorage.token)\n      }\n    }).then(function (r) {\n      return r.json();\n    }).then(function (movies) {\n      return dispatch(backendMovies(movies));\n    });\n  };\n};\nexport var getMovies = function getMovies(moviesData) {\n  return {\n    type: 'GET_MOVIES',\n    payload: moviesData\n  };\n};\nexport var zipMovies = function zipMovies(zipCode, zipRadius) {\n  return function (dispatch) {\n    var currentDate = new Date().toISOString().slice(0, 10);\n    return fetch(\"http://data.tmsapi.com/v1.1/movies/showings?startDate=\".concat(currentDate, \"&zip=\").concat(zipCode, \"&radius=\").concat(zipRadius, \"&api_key=\").concat(process.env.REACT_APP_MOVIE_KEY), {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json'\n      }\n    }).then(function (r) {\n      return r.json();\n    }).then(function (moviesData) {\n      return dispatch(getMovies(moviesData));\n    }).then(function (moviesData) {\n      return persistMovies(moviesData);\n    }).then(function (movies) {\n      return localStorage.setItem('zips', JSON.stringify());\n    });\n  };\n};\n\nvar persistMovies = function persistMovies(moviesData) {\n  var moviesArray = moviesData.payload.map(function (movie) {\n    return movie.title;\n  });\n  moviesArray.forEach(function (title) {\n    return fetch(moviesUrl, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: \"Bearer \".concat(localStorage.token)\n      },\n      body: JSON.stringify({\n        title: title\n      })\n    });\n  });\n};\n\nexport var selectMovie = function selectMovie(movie) {\n  return {\n    type: 'SELECT_MOVIE',\n    payload: movie\n  };\n};\nexport var addPlaying = function addPlaying(nowPlaying) {\n  return {\n    type: 'ADD_PLAYING',\n    payload: nowPlaying\n  };\n};\nexport var getNowPlaying = function getNowPlaying() {\n  return function (dispatch) {\n    return fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=\".concat(process.env.REACT_APP_POSTER_KEY, \"&language=en-US&page=1\")).then(function (r) {\n      return r.json();\n    }).then(function (nowPlaying) {\n      return dispatch(addPlaying(nowPlaying.results));\n    }).catch(console.error);\n  };\n};\nexport var addPlayingTwo = function addPlayingTwo(nowPlaying) {\n  return {\n    type: 'ADD_PLAYING_TWO',\n    payload: nowPlaying\n  };\n};\nexport var getNowPlayingTwo = function getNowPlayingTwo() {\n  return function (dispatch) {\n    return fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=\".concat(process.env.REACT_APP_POSTER_KEY, \"&language=en-US&page=2\")).then(function (r) {\n      return r.json();\n    }).then(function (nowPlaying) {\n      return dispatch(addPlayingTwo(nowPlaying.results));\n    }).catch(console.error);\n  };\n};\nexport var addPlayingThree = function addPlayingThree(nowPlaying) {\n  return {\n    type: 'ADD_PLAYING_THREE',\n    payload: nowPlaying\n  };\n};\nexport var getNowPlayingThree = function getNowPlayingThree() {\n  return function (dispatch) {\n    return fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=\".concat(process.env.REACT_APP_POSTER_KEY, \"&language=en-US&page=3\")).then(function (r) {\n      return r.json();\n    }).then(function (nowPlaying) {\n      return dispatch(addPlayingThree(nowPlaying.results));\n    }).catch(console.error);\n  };\n};","map":{"version":3,"sources":["/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Redux/Actions/movieAction.js"],"names":["moviesUrl","backendMovies","movies","type","payload","getBackendMovies","dispatch","fetch","method","headers","Authorization","localStorage","token","then","r","json","getMovies","moviesData","zipMovies","zipCode","zipRadius","currentDate","Date","toISOString","slice","process","env","REACT_APP_MOVIE_KEY","persistMovies","setItem","JSON","stringify","moviesArray","map","movie","title","forEach","body","selectMovie","addPlaying","nowPlaying","getNowPlaying","REACT_APP_POSTER_KEY","results","catch","console","error","addPlayingTwo","getNowPlayingTwo","addPlayingThree","getNowPlayingThree"],"mappings":"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","sourcesContent":["const moviesUrl = 'http://localhost:3001/api/v1/movies'\n\nexport const backendMovies = (movies) => ({type: 'BACKEND_MOVIES', payload: movies})\n\nexport const getBackendMovies = () => {\n  return dispatch => {\n    return fetch(moviesUrl, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    })\n    .then(r => r.json())\n    .then(movies => dispatch(backendMovies(movies)))\n  }\n};\n\nexport const getMovies = (moviesData) => ({type: 'GET_MOVIES', payload: moviesData});\n\nexport const zipMovies =  (zipCode, zipRadius) => {\n  return dispatch => {\n    let currentDate = new Date().toISOString().slice(0,10);\n    return fetch(`http://data.tmsapi.com/v1.1/movies/showings?startDate=${currentDate}&zip=${zipCode}&radius=${zipRadius}&api_key=${process.env.REACT_APP_MOVIE_KEY}`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json'\n      }\n    })\n    .then(r => r.json())\n    .then(moviesData => dispatch(getMovies(moviesData)))\n    .then(moviesData => persistMovies(moviesData))\n        .then(movies => localStorage.setItem('zips', JSON.stringify()))\n  }\n};\n\nconst persistMovies = (moviesData) => {\n  let moviesArray = moviesData.payload.map(movie => movie.title);\n  moviesArray.forEach(title => {\n    return fetch(moviesUrl, {\n    method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json',\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({title})\n    })\n  })\n};\n\nexport const selectMovie = (movie) => ({type: 'SELECT_MOVIE', payload: movie});\n\nexport const addPlaying = (nowPlaying) => ({type: 'ADD_PLAYING', payload: nowPlaying});\n\nexport const getNowPlaying = () => {\n  return dispatch => {\n    return fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_POSTER_KEY}&language=en-US&page=1`)\n    .then(r => r.json())\n    .then(nowPlaying => dispatch(addPlaying(nowPlaying.results)))\n    .catch(console.error)\n  }\n};\n\nexport const addPlayingTwo = (nowPlaying) => ({type: 'ADD_PLAYING_TWO', payload: nowPlaying});\n\nexport const getNowPlayingTwo = () => {\n  return dispatch => {\n    return fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_POSTER_KEY}&language=en-US&page=2`)\n    .then(r => r.json())\n    .then(nowPlaying => dispatch(addPlayingTwo(nowPlaying.results)))\n    .catch(console.error)\n  }\n};\n\nexport const addPlayingThree = (nowPlaying) => ({type: 'ADD_PLAYING_THREE', payload: nowPlaying});\n\nexport const getNowPlayingThree = () => {\n  return dispatch => {\n    return fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_POSTER_KEY}&language=en-US&page=3`)\n    .then(r => r.json())\n    .then(nowPlaying => dispatch(addPlayingThree(nowPlaying.results)))\n    .catch(console.error)\n  }\n};"]},"metadata":{},"sourceType":"module"}