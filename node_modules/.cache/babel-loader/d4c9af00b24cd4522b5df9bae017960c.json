{"ast":null,"code":"import _classCallCheck from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Components/SelectedMovie.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Header, Segment } from 'semantic-ui-react';\nimport Comments from './Comments';\n\nvar SelectedMovie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SelectedMovie, _Component);\n\n  function SelectedMovie() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SelectedMovie);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SelectedMovie)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getMovieShowtimes = function () {\n      var movieShowtimes = {};\n\n      _this.props.selectedMovie.showtimes.forEach(function (theatre) {\n        if (movieShowtimes.hasOwnProperty([theatre.theatre.name])) {\n          movieShowtimes[theatre.theatre.name].push(theatre.dateTime);\n        } else {\n          movieShowtimes[theatre.theatre.name] = [theatre.dateTime];\n        }\n      });\n\n      return movieShowtimes;\n    };\n\n    return _this;\n  }\n\n  _createClass(SelectedMovie, [{\n    key: \"render\",\n    value: function render() {\n      // let posters = this.moviePosters();\n      var theatreShowtimes = this.getMovieShowtimes();\n      var times = [];\n\n      for (var key in theatreShowtimes) {\n        times.push(React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, key, \": \", theatreShowtimes[key].map(function (time) {\n          return new Date(time).toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit'\n          });\n        }).join(', ')));\n      }\n\n      return React.createElement(Segment, {\n        id: \"selectedmovie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Header, {\n        size: \"huge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.props.selectedMovie.title), React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Directed by:\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.selectedMovie.directors.join(', ')), React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Staring:\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \" \", this.props.selectedMovie.topCast.join(', ')), React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Synopsis:\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.selectedMovie.longDescription), React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Genre(s):\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.props.selectedMovie.genres.join(', ')), React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Now Showing at:\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, times), React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Comments:\"), React.createElement(Comments, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SelectedMovie;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    loadedMovies: state.loadedMovies,\n    selectedMovie: state.movieData.selectedMovie\n  };\n};\n\nexport default withRouter(connect(mapState)(SelectedMovie));","map":{"version":3,"sources":["/Users/jonathanfreed/Development/AccessLabs/NowShowing/now-showing-client/src/Components/SelectedMovie.js"],"names":["React","Component","connect","withRouter","Header","Segment","Comments","SelectedMovie","getMovieShowtimes","movieShowtimes","props","selectedMovie","showtimes","forEach","theatre","hasOwnProperty","name","push","dateTime","theatreShowtimes","times","key","map","time","Date","toLocaleTimeString","hour","minute","join","title","directors","topCast","longDescription","genres","mapState","state","loadedMovies","movieData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Header, Segment } from 'semantic-ui-react';\nimport Comments from './Comments';\n\nclass SelectedMovie extends Component {\n\n  // moviePosters = () => {\n  //   let posterObj = {};\n  //   this.props.nowPlaying.results.forEach(movie => {\n  //     posterObj[movie.title] = `http://image.tmdb.org/t/p/w185/${movie.poster_path}`\n  //   });\n  //   return posterObj\n  // };\n\n  getMovieShowtimes = () => {\n    let movieShowtimes = {};\n    this.props.selectedMovie.showtimes.forEach(theatre => {\n      if(movieShowtimes.hasOwnProperty([theatre.theatre.name])){\n      movieShowtimes[theatre.theatre.name].push(theatre.dateTime)\n      } else {\n        movieShowtimes[theatre.theatre.name] = [theatre.dateTime]\n      }\n    });\n    return movieShowtimes\n  };\n\n  render(){\n    // let posters = this.moviePosters();\n    let theatreShowtimes = this.getMovieShowtimes();\n    let times = [];\n    for(let key in theatreShowtimes){\n      times.push(\n          <h3>\n           {key}: {theatreShowtimes[key].map(time => new Date(time).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit'})).join(', ')}\n          </h3>)\n    }\n\n\n\n    return(\n        <Segment id='selectedmovie'>\n          {/*<Image src={posters[movie.title.replace(\"3D\", \"\").trim()]} size='small' floated='right'/>*/}\n          <Header size='huge'>{this.props.selectedMovie.title}</Header>\n          <Header size='large'>Directed by:</Header>\n            <h3>{this.props.selectedMovie.directors.join(', ')}</h3>\n          <Header size='large'>Staring:</Header>\n            <h3> {this.props.selectedMovie.topCast.join(', ')}</h3>\n          <Header size='large'>Synopsis:</Header>\n            <h3>{this.props.selectedMovie.longDescription}</h3>\n          <Header size='large'>Genre(s):</Header>\n            <h3>{this.props.selectedMovie.genres.join(', ')}</h3>\n          <Header size='large'>Now Showing at:</Header>\n            <h3>{times}</h3>\n          <Header size='large'>Comments:</Header>\n            <Comments/>\n        </Segment>\n    )\n   }\n}\n\nconst mapState = (state) => {\n  return {\n    loadedMovies: state.loadedMovies,\n    selectedMovie: state.movieData.selectedMovie\n  }\n};\n\nexport default withRouter(connect(mapState)(SelectedMovie));"]},"metadata":{},"sourceType":"module"}